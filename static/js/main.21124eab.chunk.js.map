{"version":3,"sources":["components/Form/index.js","components/Question/index.js","components/Progress/index.js","components/Winner/index.js","components/Page/index.js","App.js","index.js"],"names":["Form","Question","props","choices","question","useState","choices2","correct","response","undefined","incorrect","correct_answer","atob","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","handleChange","event","console","log","target","value","id","choicePreso","map","choice","index","thisChoice","className","type","name","onChange","htmlFor","onSubmit","preventDefault","cStatus","document","getElementById","checked","valForm","Progress","progressPercent","counter","chickenMoji","style","width","role","Winner","title","class","onClick","reset","href","Page","chickenTitle","setChickenTitle","chickenData","setChickenData","chickenCounter","setChickenCounter","chickenState","setChickenState","useEffect","fetch","then","res","json","data","results","useWindowSize","height","incorrect_answers","App","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.21124eab.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [formies, setFormies] = useState(\"small cat\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Form - handleSubmit\", formies);\n    props.valForm(formies);\n  };\n  const handleChange = (event) => {\n    console.log(\"handleChange - event\", event.target.value, event.target.name);\n    setFormies(event.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"gifSearch\"\n          placeholder=\"Search to get gifff...\"\n          onChange={handleChange}\n        />\n        <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React, { useState, useRef } from \"react\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex]\n    ];\n  }\n\n  return array;\n}\n\nfunction Question(props) {\n  let choices = [];\n  let question = \"\";\n  const [formies, setFormies] = useState(\"small cat\");\n  let choices2 = [];\n  let correct = \"\";\n  let response = \"\";\n\n  if (props.incorrect != undefined) {\n    choices = [props.question.correct_answer, ...props.incorrect];\n    question = atob(props.question.question);\n    choices2 = shuffle(choices);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Form - handleSubmit\", response);\n    let cStatus = false;\n    if (response == atob(props.question.correct_answer)) {\n      correct =\n        \"You are correct, it was \" + atob(props.question.correct_answer);\n      cStatus = true;\n      if (response != \"\") {\n        document.getElementById(response).checked = false;\n      }\n    } else {\n      correct =\n        \"You are one dumb chicken! The answer to \" +\n        atob(props.question.question) +\n        \" is \" +\n        atob(props.question.correct_answer);\n      if (response != \"\") {\n        document.getElementById(response).checked = false;\n      }\n    }\n    console.log(correct);\n    props.valForm(correct, cStatus);\n  };\n  const handleChange = (event) => {\n    console.log(\"handleChange - event\", event.target.value, event.target.id);\n    response = event.target.id;\n  };\n\n  const choicePreso = choices2.map((choice, index) => {\n    let thisChoice = atob(choice);\n    return (\n      <div className=\"form-check\" key={index}>\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          name=\"flexRadioDefault\"\n          id={thisChoice}\n          onChange={handleChange}\n        />\n        <label className=\"form-check-label\" htmlFor={thisChoice}>\n          {thisChoice}\n        </label>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"question\">\n      <h3>{question}</h3>\n      <form onSubmit={handleSubmit}>\n        {choicePreso}\n        <button\n          className=\"btn btn-md btn-primary btn-block\"\n          id=\"next\"\n          name=\"cluck\"\n        >\n          next 🚜...\n        </button>\n      </form>\n    </div>\n  );\n}\nexport default Question;\n","import React from \"react\";\n\nfunction Progress(props) {\n  let chickenProgress = props.counter * 20;\n  let progressPercent = \"\" + chickenProgress + \"%\";\n  let chickenMoji = \"🥚\";\n  switch (props.counter) {\n    case 1:\n      chickenMoji = \"🐣\";\n      break;\n    case 2:\n      chickenMoji = \"🐤\";\n      break;\n    case 3:\n      chickenMoji = \"🐥\";\n      break;\n    case 4:\n      chickenMoji = \"🐓\";\n      break;\n    case 5:\n      chickenMoji = \"🐔\";\n      break;\n    default:\n      chickenMoji = \"🥚\";\n  }\n  return (\n    <div>\n      <div className=\"progress\">\n        <div\n          className=\"progress-bar\"\n          style={{ width: progressPercent }}\n          role=\"progressbar\"\n          aria-valuenow=\"20\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div className=\"status\">\n        <h1>{chickenMoji}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n","import React from \"react\";\n\nfunction Winner(props) {\n  return (\n    <div className=\"winner\">\n      <p>\n        <i>{props.title}</i>\n      </p>\n      <h1>You are one 🐔 BIG CHICKEN!</h1>\n      <h2>🥚🐣🐤🐥🐓🐔!</h2>\n      <br />\n      <a\n        class=\"btn btn-md btn-primary btn-block\"\n        data-size=\"large\"\n        onClick={props.reset}\n      >\n        Play Again\n      </a>\n      <a\n        class=\"btn btn-md btn-secondary btn-block\"\n        href=\"https://twitter.com/intent/tweet?text=I%20AM%20A%20BIG%20CHICKEN!🥚🐣🐤🐥🐓🐔!\"\n        data-size=\"large\"\n        target=\"new\"\n      >\n        Tweet\n      </a>\n    </div>\n  );\n}\n\nexport default Winner;\n","import React, { useState, useEffect } from \"react\";\nimport Gif from \"../Gif\";\nimport Form from \"../Form\";\nimport Question from \"../Question\";\nimport Progress from \"../Progress\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport Winner from \"../Winner\";\n\nfunction Page() {\n  const [chickenTitle, setChickenTitle] = useState(\" \");\n  const [chickenData, setChickenData] = useState(\"\");\n  const [chickenCounter, setChickenCounter] = useState(0);\n  const [chickenState, setChickenState] = useState(0);\n\n  const validateForm = (correct, cStatus) => {\n    if (correct == \"\") {\n      setChickenTitle(\"random\");\n      if (chickenCounter < 5) {\n        setChickenState(chickenState + 1);\n      }\n    } else {\n      setChickenTitle(correct);\n      if (chickenCounter < 5) {\n        setChickenState(chickenState + 1);\n      }\n    }\n    if (cStatus == true) {\n      setChickenCounter(chickenCounter + 1);\n    } else {\n      setChickenCounter(0);\n    }\n    console.log(\"App - validateFrom() - formies\", chickenTitle);\n  };\n\n  const resetChicken = () => {\n    setChickenCounter(0);\n    setChickenTitle(\"\");\n    setChickenState(0);\n  };\n\n  useEffect(() => {\n    let chickenUrl = `https://opentdb.com/api.php?amount=1&difficulty=easy&type=multiple&encode=base64&category=9`;\n\n    const makeApiCall = () => {\n      fetch(chickenUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\n            \"chickenData\",\n            data.results[0],\n            \"counter is \",\n            chickenCounter\n          );\n          setChickenData(data.results[0]);\n        });\n    };\n    makeApiCall();\n  }, [chickenState]);\n  const { width, height } = useWindowSize();\n\n  if (chickenCounter == 5) {\n    return (\n      <div>\n        <Confetti width={width} height={height} />\n        <div className=\"chickenHeader\">\n          <h1>🐔 Big Chicken</h1>\n          <h4>Answer questions to grow your chicken</h4>\n          <Progress counter={chickenCounter} />\n        </div>\n        <Winner title={chickenTitle} reset={resetChicken} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"chickenHeader\">\n          <h1>🐔 Big Chicken</h1>\n          <h4>Answer questions to grow your chicken</h4>\n          <Progress counter={chickenCounter} />\n        </div>\n        <Question\n          question={chickenData}\n          incorrect={chickenData.incorrect_answers}\n          valForm={validateForm}\n        />\n        <div className=\"chickenTitle\">\n          <p>\n            <i>{chickenTitle}</i>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Page from \"./components/Page\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}