{"version":3,"sources":["components/Form/index.js","components/Question/index.js","components/Progress/index.js","components/Winner/index.js","components/Timer/index.js","components/Page/index.js","App.js","index.js"],"names":["Form","Question","props","choices","question","useState","choices2","correct","response","undefined","incorrect","correct_answer","atob","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","handleChange","event","console","log","target","value","id","choicePreso","map","choice","index","thisChoice","className","type","name","onChange","htmlFor","noShow","onSubmit","preventDefault","cStatus","document","getElementById","checked","valForm","Progress","progressPercent","counter","chickenMoji","style","width","role","Winner","winner","class","onClick","reset","href","Timer","state","elapsedTime","countUp","bind","startCounting","setInterval","this","pause","setState","React","Component","Page","chickenTitle","setChickenTitle","chickenData","setChickenData","chickenCounter","setChickenCounter","chickenState","setChickenState","useEffect","fetch","then","res","json","data","results","useWindowSize","height","run","incorrect_answers","title","location","reload","App","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.e8fd572c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [formies, setFormies] = useState(\"small cat\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Form - handleSubmit\", formies);\n    props.valForm(formies);\n  };\n  const handleChange = (event) => {\n    console.log(\"handleChange - event\", event.target.value, event.target.name);\n    setFormies(event.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"gifSearch\"\n          placeholder=\"Search to get gifff...\"\n          onChange={handleChange}\n        />\n        <button className=\"btn btn-lg btn-primary btn-block\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React, { useState, useRef } from \"react\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex]\n    ];\n  }\n\n  return array;\n}\n\nfunction Question(props) {\n  let choices = [];\n  let question = \"\";\n  const [formies, setFormies] = useState(\"small cat\");\n  let choices2 = [];\n  let correct = \"\";\n  let response = \"\";\n\n  if (props.incorrect != undefined) {\n    choices = [props.question.correct_answer, ...props.incorrect];\n    question = atob(props.question.question);\n    choices2 = shuffle(choices);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Form - handleSubmit\", response);\n    let cStatus = false;\n    if (response == atob(props.question.correct_answer)) {\n      correct =\n        \"You are correct, it was \" + atob(props.question.correct_answer);\n      cStatus = true;\n      if (response != \"\") {\n        document.getElementById(response).checked = false;\n      }\n    } else {\n      correct =\n        \"You are one dumb chicken! The answer to \" +\n        atob(props.question.question) +\n        \" is \" +\n        atob(props.question.correct_answer);\n      if (response != \"\") {\n        document.getElementById(response).checked = false;\n      }\n    }\n    console.log(correct);\n    props.valForm(correct, cStatus);\n  };\n  const handleChange = (event) => {\n    console.log(\"handleChange - event\", event.target.value, event.target.id);\n    response = event.target.id;\n  };\n\n  const choicePreso = choices2.map((choice, index) => {\n    let thisChoice = atob(choice);\n    return (\n      <div className=\"form-check\" key={index}>\n        <input\n          className=\"form-check-input\"\n          type=\"radio\"\n          name=\"flexRadioDefault\"\n          id={thisChoice}\n          onChange={handleChange}\n        />\n        <label className=\"form-check-label\" htmlFor={thisChoice}>\n          {thisChoice}\n        </label>\n      </div>\n    );\n  });\n  if (props.noShow == false) {\n    return (\n      <div className=\"question\">\n        <h3>{question}</h3>\n        <form onSubmit={handleSubmit}>\n          {choicePreso}\n          <button\n            className=\"btn btn-md btn-primary btn-block\"\n            id=\"next\"\n            name=\"cluck\"\n          >\n            next 🚜...\n          </button>\n        </form>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\nexport default Question;\n","import React from \"react\";\n\nfunction Progress(props) {\n  let chickenProgress = props.counter * 20;\n  let progressPercent = \"\" + chickenProgress + \"%\";\n  let chickenMoji = \"🥚\";\n  switch (props.counter) {\n    case 1:\n      chickenMoji = \"🐣\";\n      break;\n    case 2:\n      chickenMoji = \"🐤\";\n      break;\n    case 3:\n      chickenMoji = \"🐥\";\n      break;\n    case 4:\n      chickenMoji = \"🐓\";\n      break;\n    case 5:\n      chickenMoji = \"🐔\";\n      break;\n    default:\n      chickenMoji = \"🥚\";\n  }\n  return (\n    <div>\n      <div className=\"progress\">\n        <div\n          className=\"progress-bar\"\n          style={{ width: progressPercent }}\n          role=\"progressbar\"\n          aria-valuenow=\"20\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n        ></div>\n      </div>\n      <div className=\"status\">\n        <h1>{chickenMoji}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Progress;\n","import React from \"react\";\n\nfunction Winner(props) {\n  if (props.winner) {\n    return (\n      <div className=\"winner\">\n        <h1>You are one 🐔 BIG CHICKEN!</h1>\n        <h2>🥚🐣🐤🐥🐓🐔!</h2>\n        <br />\n        <a\n          class=\"btn btn-md btn-primary btn-block\"\n          data-size=\"large\"\n          onClick={props.reset}\n        >\n          Play Again\n        </a>\n        <a\n          class=\"btn btn-md btn-secondary btn-block\"\n          href=\"https://twitter.com/intent/tweet?text=I%20AM%20A%20BIG%20CHICKEN!🥚🐣🐤🐥🐓🐔!\"\n          data-size=\"large\"\n          target=\"new\"\n        >\n          Tweet\n        </a>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default Winner;\n","import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elapsedTime: 0\n    };\n\n    this.countUp = this.countUp.bind(this);\n    this.startCounting = this.startCounting.bind(this);\n    setInterval(this.countUp, 1000);\n  }\n\n  startCounting() {}\n\n  countUp() {\n    if (this.props.pause != true) {\n      this.setState(({ elapsedTime }) => ({ elapsedTime: elapsedTime + 1 }));\n    }\n  }\n\n  render() {\n    if (this.props.pause != true) {\n      return (\n        <div className=\"chickenTitle2\">\n          <h3>{this.state.elapsedTime} ⏲</h3>\n          <p>second(s) on the egg timer</p>\n        </div>\n      );\n    } else {\n      return (\n        <h3 className=\"chickenTitle2\">\n          It took you {this.state.elapsedTime} seconds to become the big 🍗 !\n        </h3>\n      );\n    }\n  }\n}\n\nexport default Timer;\n","import React, { useState, useEffect } from \"react\";\nimport Gif from \"../Gif\";\nimport Form from \"../Form\";\nimport Question from \"../Question\";\nimport Progress from \"../Progress\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport Winner from \"../Winner\";\nimport Timer from \"../Timer\";\n\nfunction Page() {\n  const [chickenTitle, setChickenTitle] = useState(\" \");\n  const [chickenData, setChickenData] = useState(\"\");\n  const [chickenCounter, setChickenCounter] = useState(0);\n  const [chickenState, setChickenState] = useState(0);\n  let pause = false;\n  let recy = 0;\n\n  const validateForm = (correct, cStatus) => {\n    if (correct == \"\") {\n      setChickenTitle(\"random\");\n      if (chickenCounter < 5) {\n        setChickenState(chickenState + 1);\n      }\n    } else {\n      setChickenTitle(correct);\n      if (chickenCounter < 5) {\n        setChickenState(chickenState + 1);\n      }\n    }\n    if (cStatus == true) {\n      setChickenCounter(chickenCounter + 1);\n    } else {\n      setChickenCounter(0);\n    }\n    console.log(\"App - validateFrom() - formies\", chickenTitle);\n  };\n\n  const resetChicken = () => {\n    setChickenCounter(0);\n    setChickenTitle(\"\");\n    setChickenState(0);\n    location.reload();\n    pause = false;\n  };\n\n  useEffect(() => {\n    let chickenUrl = `https://opentdb.com/api.php?amount=1&difficulty=easy&type=multiple&encode=base64&category=9`;\n\n    const makeApiCall = () => {\n      fetch(chickenUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\n            \"chickenData\",\n            data.results[0],\n            \"counter is \",\n            chickenCounter\n          );\n          setChickenData(data.results[0]);\n        });\n    };\n    makeApiCall();\n  }, [chickenState]);\n  const { width, height } = useWindowSize();\n\n  if (chickenCounter == 5) {\n    pause = true;\n  }\n\n  return (\n    <div>\n      <Confetti run={pause} width={width} height={height} />\n      <div className=\"chickenHeader\">\n        <h1>🐔 Big Chicken</h1>\n        <h4>Answer questions to grow your chicken</h4>\n        <Progress counter={chickenCounter} />\n      </div>\n      <Question\n        question={chickenData}\n        incorrect={chickenData.incorrect_answers}\n        valForm={validateForm}\n        noShow={pause}\n      />\n      <Winner winner={pause} title={chickenTitle} reset={resetChicken} />\n      <Timer pause={pause} />\n\n      <div className=\"chickenTitle\">\n        <p>\n          <i>{chickenTitle}</i>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Page;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Page from \"./components/Page\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}